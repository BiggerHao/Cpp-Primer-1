Exercise 4.23: The following expression fails to compile due to operator
precedence. Using Table 4.12 (p. 166), explain why it fails. How would you fix
it?

	string s = "word";
	string pl = s + s[s.size() - 1] == 's' ? "" : "s";

By Faisal Saadatmand

There are two issues with this expression: 1) the equality operator == is
higher in precedence than the conditional operator ?:, and 2) the add operator
+ is higher than both. Therefore, the expression will be interpreted as such:

	string pl = ((s + s[s.size() - 1]) == 's') ? "" : "s";

This will fail to compile because the result of the add operator will yield a
string, which will be used in the equality operator to be compared with a char.

To fix the compile error, we have to force the order of evaluation with
parentheses, which will achieve the desired behaviour.

	string pl = s + ((s[s.size() - 1] == 's') ? "" : "s");
