Exercise 4.33: Using Table 4.12 (p. 166) explain what the following expression
does:

	someValue ? ++x, ++y : --x, --y

By Faisal Saadatmand

The intention of the expression is unclear. Perhaps it is to increment x and y,
if someValue is true (i.e., 1) or decrement x and y, if someValue is false
(i.e., 0). The problem, however, is that the conditional statement operator is
higher in precedence than the comma operator, which means it will be evaluated
first as such:

	(someValue ? ++x, ++y : --x), --y;

Note that the expression --y will always be evaluated after the conditional
statement operator has been evaluated. This would lead to a surprising result
if someValue is true.

To force the behaviour of the expression to confirm with the aforementioned
intention, we must parenthesise the second comma operator's expression.

	someValue ? ++x, ++y : (--x, --y);

or better yet both:

	someValue ? (++x, ++y) : (--x, --y);
