Exercise 4.24: Our program that distinguished between high pass, pass, and fail
depended on the fact that the conditional operator is right associative.
Describe how that operator would be evaluated if the operator were left
associative.

By Faisal Saadatmand

Since we are nesting conditional operations, we are essentially grouping
expressions with each others using operators of equal precedence, i.e., two ?:
operators. Here, the rules of associativity dictates how the expressions of
these operators are grouped together and eventually evaluated. Right
associativity means that they will be grouped from right to left as such:

	finalgrade = (grade > 90) ? "high pass" : ((grade < 60) ? "fail" : "pass");

Note how this grouping means that outer conditional operation will not be
evaluated until the inner one is evaluated first, if the grade is less than or
equal to 90.

If the operator were left associative we would have the following grouping instead:

	finalgrade = ((grade > 90) ? "high pass" : (grade < 60)) ? "fail" : "pass";

This would result in a compile error because the outer conditional operator
would have incompatible operand types: const char * and bool.
